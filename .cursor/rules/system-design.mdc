---
description: 
globs: 
alwaysApply: true
---

このファイルではシステム全体のモジュール構成の指針を示します。

# データベース操作

- データベースを操作する処理については、必ずBaseDBのサブクラスを使用すること
- データベース操作クラスはオブジェクトを生成してexportすること
- データベース操作クラスの格納ディレクトリ: src/server/db

# フェッチ

- クライアントからサーバにアクセスする場合はフェッチクラスを使用すること
- フェッチクラスはオブジェクトを生成してexportすること
- フェッチクラスの格納ディレクトリ: src/fetch
- データの更新、削除処理はadminフェッチクラスまたはmemberフェッチクラスを使用すること

# APIエンドポイント

## JSONデータを返す場合の型定義例
```
// 共通のAPIレスポンス型
export interface ApiResponse<T> {  
  message?: string
  errors?: { [k: string]: string }
  data?: T
}

// 具体的なデータ型
export interface Article {
  id: number
  title: string
  content: string
}

// 使用例
const res: ApiResponse<Article> = {
  data: {
    id: 1,
    title: "サンプル記事",
    content: "本文..."
  }
}
```

# 型定義

- 共通で使用する型定義はsrc/typesディレクトリに格納すること