---
import { getCollection } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import ImageTextLayout from '@/components/article/ImageTextLayout'
import InfoCard from '@/components/article/InfoCard'
import MDXImage from '@/components/article/MDXImage'
import ImageGallery from '@/components/article/ImageGallery'

// 静的生成を有効化
export const prerender = true

// 動的ルートのパラメータを取得
export async function getStaticPaths() {
  const articles = await getCollection('articles')
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article }
  }))
}

const { article } = Astro.props
const { Content } = await article.render()
---

<Layout
  title={article.data.title}
  {...article.data.description && { description: article.data.description }}
>
  <div class="mx-auto max-w-4xl px-4 py-8">
    <div class="rounded-lg bg-white p-8 shadow-lg">
      <!-- ページヘッダー -->
      <div class="mb-8 border-b border-gray-200 pb-8">
        <nav class="mb-4">
          <a href="/articles" class="text-primary-600 hover:text-primary-800 text-sm">
            ← 記事一覧に戻る
          </a>
        </nav>

        <h1 class="mb-4 text-3xl font-bold text-gray-900">
          {article.data.title}
        </h1>

        {
          article.data.description && (
            <p class="mb-6 text-lg text-gray-600">{article.data.description}</p>
          )
        }

        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500">
          {
            article.data.date && (
              <span class="flex items-center gap-1">
                <span class="text-gray-400">📅</span>
                {article.data.date.toLocaleDateString('ja-JP')}
              </span>
            )
          }
          {
            article.data.author && (
              <span class="flex items-center gap-1">
                <span class="text-gray-400">👤</span>
                {article.data.author}
              </span>
            )
          }
        </div>

        {
          article.data.tags && article.data.tags.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
              {article.data.tags.map((tag) => (
                <span class="bg-primary-100 text-primary-800 inline-flex items-center rounded-full px-3 py-1 text-xs font-medium">
                  #{tag}
                </span>
              ))}
            </div>
          )
        }
      </div>

      <!-- ページコンテンツ -->
      <div class="prose max-w-none">
        <Content
          components={{
            ImageTextLayout,
            InfoCard,
            MDXImage,
            ImageGallery
          }}
        />
      </div>

      <!-- ページフッター -->
      <div
        class="mt-8 flex items-center justify-between border-t border-gray-200 pt-8 text-sm text-gray-500"
      >
        <span>
          最終更新: {article.data.date?.toLocaleDateString('ja-JP') || '不明'}
        </span>
        <a href="/articles" class="text-primary-600 hover:text-primary-800"> 記事一覧に戻る </a>
      </div>
    </div>
  </div>
</Layout>
